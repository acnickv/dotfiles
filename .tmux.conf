# ` is an interesting key for a prefix
# set-option -g prefix M-`
set-option -g prefix C-a

unbind-key C-b
bind-key C-a last-window
#bind-key ` last-window
bind-key a send-prefix

# we might need ` at some point, allow switching
# we can also send the prefix char with `-a
bind-key F11 set-option -g prefix C-a
bind-key F12 set-option -g prefix `

bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"

bind-key a last-window

# 0 is too far from ` ;)
set -g base-index 1

# set-option -g default-terminal "screen-256color"
set-option -g default-terminal xterm-256color
set-option -g mouse-select-pane on
set-option -g status-keys vi
set-option -g bell-action any
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)
set-option -g visual-bell on

setw -g mode-keys vi
setw -g mode-mouse on
setw -g monitor-activity on
setw -g aggressive-resize on

bind | split-window -h
bind _ split-window -v
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind e previous-window
bind f next-window
bind k kill-pane
#bind n select-pane -t :.+
#bind p select-pane -t :.-
#bind j up-pane 
#bind k down-pane

# take current pane and either maximize it or minimize it
# right now. only works one at a time I think... but pretty AWESOME!
unbind +
bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
unbind -
bind - last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

set-option -g status-utf8 on
# set-option -g status-justify centre
set-option -g status-justify left
set-option -g status-bg black
set-option -g status-fg white
set-option -g status-left-length 40

set-option -g pane-active-border-fg green
set-option -g pane-active-border-bg black
set-option -g pane-border-fg white
set-option -g pane-border-bg black

set-option -g message-fg black
set-option -g message-bg green

#setw -g mode-bg black

setw -g window-status-bg black
setw -g window-status-current-fg green
#setw -g window-status-alert-attr default
#setw -g window-status-alert-fg yellow

set -g status-left '#[fg=red]#H#[fg=green]:#[fg=white]#S #[fg=green]][#[default]'

# set -g status-right '#[fg=green]][#[fg=white] #T #[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'
set -g status-right '#[fg=green]][ #[fg=white]%Y-%m-%d #[fg=white]%H:%M#[default]'

set -g history-limit 100000

#bind p paste-buffer
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection

# set -g terminal-overrides "xterm*:smcup@:rmcup@"


bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
#bind C-y run "tmux save-buffer - | xclip -i"
bind C-y run "tmux show-buffer - | xclip -selection clipboard"
bind C-z run "tmux show-buffer - | xclip -selection primary"

## C-c: save into system clipboard (+). With preselection.
#bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
## # C-v: copy from + clipboard.
#bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

## # C-d: save into selection clipboard (*). With preselection.
#bind C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# # C-f: copy from * clipboard.
#bind C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(*\) $(xclip -o | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

bind r source-file ~/.tmux.conf
